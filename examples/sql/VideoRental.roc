# This file was automatically generated by roc-sql
interface VideoRental 
    exposes [
        filmActor,
        address,
        city,
        actor,
        category,
        country,
        customer,
        film,
        filmCategory,
        inventory,
        language,
        rentalByCategory,
        store,
        paymentP2022N07,
        rental,
        staff,
        payment,
        paymentP2022N03,
        paymentP2022N04,
        paymentP2022N05,
        paymentP2022N06,
        paymentP2022N01,
        paymentP2022N02,
    ]
    imports [
        pg.Sql.{ identifier },
        pg.Sql.Types,
    ]



filmActor = {
    schema: "video_rental",
    name: "film_actor",
    alias: "fa",
    columns: \alias -> {
        filmId: identifier alias "film_id" filmFilmId,
        actorId: identifier alias "actor_id" actorActorId,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

addressAddressId : Sql.Types.Decode (Sql.Types.PgI32 { addressAddressId: {} }) I32
addressAddressId = Sql.Types.i32

address = {
    schema: "video_rental",
    name: "address",
    alias: "a",
    columns: \alias -> {
        cityId: identifier alias "city_id" cityCityId,
        addressId: identifier alias "address_id" addressAddressId,
        phone: identifier alias "phone" Sql.Types.str,
        postalCode: identifier alias "postal_code" (Sql.Types.nullable Sql.Types.str),
        district: identifier alias "district" Sql.Types.str,
        address2: identifier alias "address2" (Sql.Types.nullable Sql.Types.str),
        address: identifier alias "address" Sql.Types.str,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

cityCityId : Sql.Types.Decode (Sql.Types.PgI32 { cityCityId: {} }) I32
cityCityId = Sql.Types.i32

city = {
    schema: "video_rental",
    name: "city",
    alias: "c",
    columns: \alias -> {
        countryId: identifier alias "country_id" countryCountryId,
        cityId: identifier alias "city_id" cityCityId,
        city: identifier alias "city" Sql.Types.str,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

actorActorId : Sql.Types.Decode (Sql.Types.PgI32 { actorActorId: {} }) I32
actorActorId = Sql.Types.i32

actor = {
    schema: "video_rental",
    name: "actor",
    alias: "a",
    columns: \alias -> {
        actorId: identifier alias "actor_id" actorActorId,
        lastName: identifier alias "last_name" Sql.Types.str,
        firstName: identifier alias "first_name" Sql.Types.str,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

categoryCategoryId : Sql.Types.Decode (Sql.Types.PgI32 { categoryCategoryId: {} }) I32
categoryCategoryId = Sql.Types.i32

category = {
    schema: "video_rental",
    name: "category",
    alias: "c",
    columns: \alias -> {
        categoryId: identifier alias "category_id" categoryCategoryId,
        name: identifier alias "name" Sql.Types.str,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

countryCountryId : Sql.Types.Decode (Sql.Types.PgI32 { countryCountryId: {} }) I32
countryCountryId = Sql.Types.i32

country = {
    schema: "video_rental",
    name: "country",
    alias: "c",
    columns: \alias -> {
        countryId: identifier alias "country_id" countryCountryId,
        country: identifier alias "country" Sql.Types.str,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

customerCustomerId : Sql.Types.Decode (Sql.Types.PgI32 { customerCustomerId: {} }) I32
customerCustomerId = Sql.Types.i32

customer = {
    schema: "video_rental",
    name: "customer",
    alias: "c",
    columns: \alias -> {
        activebool: identifier alias "activebool" Sql.Types.bool,
        active: identifier alias "active" (Sql.Types.nullable Sql.Types.i32),
        addressId: identifier alias "address_id" addressAddressId,
        storeId: identifier alias "store_id" storeStoreId,
        customerId: identifier alias "customer_id" customerCustomerId,
        email: identifier alias "email" (Sql.Types.nullable Sql.Types.str),
        lastName: identifier alias "last_name" Sql.Types.str,
        firstName: identifier alias "first_name" Sql.Types.str,
        createDate: identifier alias "create_date" (Sql.Types.unsupported "date"),
        lastUpdate: identifier alias "last_update" (Sql.Types.nullable (Sql.Types.unsupported "timestamptz")),
    },
}

filmFilmId : Sql.Types.Decode (Sql.Types.PgI32 { filmFilmId: {} }) I32
filmFilmId = Sql.Types.i32

film = {
    schema: "video_rental",
    name: "film",
    alias: "f",
    columns: \alias -> {
        rentalDuration: identifier alias "rental_duration" Sql.Types.i16,
        length: identifier alias "length" Sql.Types.i32,
        rentalRate: identifier alias "rental_rate" Sql.Types.i32,
        originalLanguageId: identifier alias "original_language_id" (Sql.Types.nullable languageLanguageId),
        languageId: identifier alias "language_id" languageLanguageId,
        filmId: identifier alias "film_id" filmFilmId,
        rating: identifier alias "rating" (Sql.Types.nullable Sql.Types.str),
        description: identifier alias "description" Sql.Types.str,
        title: identifier alias "title" Sql.Types.str,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
        replacementCost: identifier alias "replacement_cost" Sql.Types.dec,
        fulltext: identifier alias "fulltext" (Sql.Types.unsupported "tsvector"),
        specialFeatures: identifier alias "special_features" (Sql.Types.nullable (Sql.Types.array (Sql.Types.nullable Sql.Types.str))),
        releaseYear: identifier alias "release_year" (Sql.Types.unsupported "year"),
    },
}



filmCategory = {
    schema: "video_rental",
    name: "film_category",
    alias: "fc",
    columns: \alias -> {
        categoryId: identifier alias "category_id" categoryCategoryId,
        filmId: identifier alias "film_id" filmFilmId,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

inventoryInventoryId : Sql.Types.Decode (Sql.Types.PgI32 { inventoryInventoryId: {} }) I32
inventoryInventoryId = Sql.Types.i32

inventory = {
    schema: "video_rental",
    name: "inventory",
    alias: "i",
    columns: \alias -> {
        storeId: identifier alias "store_id" storeStoreId,
        filmId: identifier alias "film_id" filmFilmId,
        inventoryId: identifier alias "inventory_id" inventoryInventoryId,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

languageLanguageId : Sql.Types.Decode (Sql.Types.PgI32 { languageLanguageId: {} }) I32
languageLanguageId = Sql.Types.i32

language = {
    schema: "video_rental",
    name: "language",
    alias: "l",
    columns: \alias -> {
        languageId: identifier alias "language_id" languageLanguageId,
        name: identifier alias "name" Sql.Types.str,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}



rentalByCategory = {
    schema: "video_rental",
    name: "rental_by_category",
    alias: "rbc",
    columns: \alias -> {
        category: identifier alias "category" (Sql.Types.nullable Sql.Types.str),
        totalSales: identifier alias "total_sales" (Sql.Types.nullable Sql.Types.dec),
    },
}

storeStoreId : Sql.Types.Decode (Sql.Types.PgI32 { storeStoreId: {} }) I32
storeStoreId = Sql.Types.i32

store = {
    schema: "video_rental",
    name: "store",
    alias: "s",
    columns: \alias -> {
        addressId: identifier alias "address_id" addressAddressId,
        managerStaffId: identifier alias "manager_staff_id" Sql.Types.i32,
        storeId: identifier alias "store_id" storeStoreId,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

paymentP2022N07PaymentId : Sql.Types.Decode (Sql.Types.PgI32 { paymentP2022N07PaymentId: {} }) I32
paymentP2022N07PaymentId = Sql.Types.i32

paymentP2022N07PaymentDate : Sql.Types.Decode { paymentP2022N07PaymentDate: {} } Sql.Types.Raw
paymentP2022N07PaymentDate = (Sql.Types.unsupported "timestamptz")

paymentP2022N07 = {
    schema: "video_rental",
    name: "payment_p2022_07",
    alias: "pp0",
    columns: \alias -> {
        rentalId: identifier alias "rental_id" Sql.Types.i32,
        staffId: identifier alias "staff_id" Sql.Types.i32,
        customerId: identifier alias "customer_id" Sql.Types.i32,
        paymentId: identifier alias "payment_id" paymentP2022N07PaymentId,
        paymentDate: identifier alias "payment_date" paymentP2022N07PaymentDate,
        amount: identifier alias "amount" Sql.Types.dec,
    },
}

rentalRentalId : Sql.Types.Decode (Sql.Types.PgI32 { rentalRentalId: {} }) I32
rentalRentalId = Sql.Types.i32

rental = {
    schema: "video_rental",
    name: "rental",
    alias: "r",
    columns: \alias -> {
        staffId: identifier alias "staff_id" staffStaffId,
        customerId: identifier alias "customer_id" customerCustomerId,
        inventoryId: identifier alias "inventory_id" inventoryInventoryId,
        rentalId: identifier alias "rental_id" rentalRentalId,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
        returnDate: identifier alias "return_date" (Sql.Types.nullable (Sql.Types.unsupported "timestamptz")),
        rentalDate: identifier alias "rental_date" (Sql.Types.unsupported "timestamptz"),
    },
}

staffStaffId : Sql.Types.Decode (Sql.Types.PgI32 { staffStaffId: {} }) I32
staffStaffId = Sql.Types.i32

staff = {
    schema: "video_rental",
    name: "staff",
    alias: "s",
    columns: \alias -> {
        active: identifier alias "active" Sql.Types.bool,
        picture: identifier alias "picture" (Sql.Types.nullable (Sql.Types.unsupported "bytea")),
        storeId: identifier alias "store_id" storeStoreId,
        addressId: identifier alias "address_id" addressAddressId,
        staffId: identifier alias "staff_id" staffStaffId,
        password: identifier alias "password" (Sql.Types.nullable Sql.Types.str),
        username: identifier alias "username" Sql.Types.str,
        email: identifier alias "email" (Sql.Types.nullable Sql.Types.str),
        lastName: identifier alias "last_name" Sql.Types.str,
        firstName: identifier alias "first_name" Sql.Types.str,
        lastUpdate: identifier alias "last_update" (Sql.Types.unsupported "timestamptz"),
    },
}

paymentPaymentId : Sql.Types.Decode (Sql.Types.PgI32 { paymentPaymentId: {} }) I32
paymentPaymentId = Sql.Types.i32

paymentPaymentDate : Sql.Types.Decode { paymentPaymentDate: {} } Sql.Types.Raw
paymentPaymentDate = (Sql.Types.unsupported "timestamptz")

payment = {
    schema: "video_rental",
    name: "payment",
    alias: "p",
    columns: \alias -> {
        rentalId: identifier alias "rental_id" Sql.Types.i32,
        staffId: identifier alias "staff_id" Sql.Types.i32,
        customerId: identifier alias "customer_id" Sql.Types.i32,
        paymentId: identifier alias "payment_id" paymentPaymentId,
        paymentDate: identifier alias "payment_date" paymentPaymentDate,
        amount: identifier alias "amount" Sql.Types.dec,
    },
}

paymentP2022N03PaymentId : Sql.Types.Decode (Sql.Types.PgI32 { paymentP2022N03PaymentId: {} }) I32
paymentP2022N03PaymentId = Sql.Types.i32

paymentP2022N03PaymentDate : Sql.Types.Decode { paymentP2022N03PaymentDate: {} } Sql.Types.Raw
paymentP2022N03PaymentDate = (Sql.Types.unsupported "timestamptz")

paymentP2022N03 = {
    schema: "video_rental",
    name: "payment_p2022_03",
    alias: "pp0",
    columns: \alias -> {
        rentalId: identifier alias "rental_id" rentalRentalId,
        staffId: identifier alias "staff_id" staffStaffId,
        customerId: identifier alias "customer_id" customerCustomerId,
        paymentId: identifier alias "payment_id" paymentP2022N03PaymentId,
        paymentDate: identifier alias "payment_date" paymentP2022N03PaymentDate,
        amount: identifier alias "amount" Sql.Types.dec,
    },
}

paymentP2022N04PaymentId : Sql.Types.Decode (Sql.Types.PgI32 { paymentP2022N04PaymentId: {} }) I32
paymentP2022N04PaymentId = Sql.Types.i32

paymentP2022N04PaymentDate : Sql.Types.Decode { paymentP2022N04PaymentDate: {} } Sql.Types.Raw
paymentP2022N04PaymentDate = (Sql.Types.unsupported "timestamptz")

paymentP2022N04 = {
    schema: "video_rental",
    name: "payment_p2022_04",
    alias: "pp0",
    columns: \alias -> {
        rentalId: identifier alias "rental_id" rentalRentalId,
        staffId: identifier alias "staff_id" staffStaffId,
        customerId: identifier alias "customer_id" customerCustomerId,
        paymentId: identifier alias "payment_id" paymentP2022N04PaymentId,
        paymentDate: identifier alias "payment_date" paymentP2022N04PaymentDate,
        amount: identifier alias "amount" Sql.Types.dec,
    },
}

paymentP2022N05PaymentId : Sql.Types.Decode (Sql.Types.PgI32 { paymentP2022N05PaymentId: {} }) I32
paymentP2022N05PaymentId = Sql.Types.i32

paymentP2022N05PaymentDate : Sql.Types.Decode { paymentP2022N05PaymentDate: {} } Sql.Types.Raw
paymentP2022N05PaymentDate = (Sql.Types.unsupported "timestamptz")

paymentP2022N05 = {
    schema: "video_rental",
    name: "payment_p2022_05",
    alias: "pp0",
    columns: \alias -> {
        rentalId: identifier alias "rental_id" rentalRentalId,
        staffId: identifier alias "staff_id" staffStaffId,
        customerId: identifier alias "customer_id" customerCustomerId,
        paymentId: identifier alias "payment_id" paymentP2022N05PaymentId,
        paymentDate: identifier alias "payment_date" paymentP2022N05PaymentDate,
        amount: identifier alias "amount" Sql.Types.dec,
    },
}

paymentP2022N06PaymentId : Sql.Types.Decode (Sql.Types.PgI32 { paymentP2022N06PaymentId: {} }) I32
paymentP2022N06PaymentId = Sql.Types.i32

paymentP2022N06PaymentDate : Sql.Types.Decode { paymentP2022N06PaymentDate: {} } Sql.Types.Raw
paymentP2022N06PaymentDate = (Sql.Types.unsupported "timestamptz")

paymentP2022N06 = {
    schema: "video_rental",
    name: "payment_p2022_06",
    alias: "pp0",
    columns: \alias -> {
        rentalId: identifier alias "rental_id" rentalRentalId,
        staffId: identifier alias "staff_id" staffStaffId,
        customerId: identifier alias "customer_id" customerCustomerId,
        paymentId: identifier alias "payment_id" paymentP2022N06PaymentId,
        paymentDate: identifier alias "payment_date" paymentP2022N06PaymentDate,
        amount: identifier alias "amount" Sql.Types.dec,
    },
}

paymentP2022N01PaymentId : Sql.Types.Decode (Sql.Types.PgI32 { paymentP2022N01PaymentId: {} }) I32
paymentP2022N01PaymentId = Sql.Types.i32

paymentP2022N01PaymentDate : Sql.Types.Decode { paymentP2022N01PaymentDate: {} } Sql.Types.Raw
paymentP2022N01PaymentDate = (Sql.Types.unsupported "timestamptz")

paymentP2022N01 = {
    schema: "video_rental",
    name: "payment_p2022_01",
    alias: "pp0",
    columns: \alias -> {
        rentalId: identifier alias "rental_id" rentalRentalId,
        staffId: identifier alias "staff_id" staffStaffId,
        customerId: identifier alias "customer_id" customerCustomerId,
        paymentId: identifier alias "payment_id" paymentP2022N01PaymentId,
        paymentDate: identifier alias "payment_date" paymentP2022N01PaymentDate,
        amount: identifier alias "amount" Sql.Types.dec,
    },
}

paymentP2022N02PaymentId : Sql.Types.Decode (Sql.Types.PgI32 { paymentP2022N02PaymentId: {} }) I32
paymentP2022N02PaymentId = Sql.Types.i32

paymentP2022N02PaymentDate : Sql.Types.Decode { paymentP2022N02PaymentDate: {} } Sql.Types.Raw
paymentP2022N02PaymentDate = (Sql.Types.unsupported "timestamptz")

paymentP2022N02 = {
    schema: "video_rental",
    name: "payment_p2022_02",
    alias: "pp0",
    columns: \alias -> {
        rentalId: identifier alias "rental_id" rentalRentalId,
        staffId: identifier alias "staff_id" staffStaffId,
        customerId: identifier alias "customer_id" customerCustomerId,
        paymentId: identifier alias "payment_id" paymentP2022N02PaymentId,
        paymentDate: identifier alias "payment_date" paymentP2022N02PaymentDate,
        amount: identifier alias "amount" Sql.Types.dec,
    },
}
